# Pre-commit hooks for code quality
# To use: pip install pre-commit && pre-commit install

repos:
  # Ruff - Fast Python linter (AUDIT ONLY - no auto-fixes)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.0
    hooks:
      - id: ruff
        name: Ruff Check (Audit Only)
        args: [--no-fix, --exit-non-zero-on-fix]  # Fail if fixes needed, don't apply them
        stages: [commit]
      
      - id: ruff-format
        name: Ruff Format Check (Audit Only)  
        args: [--check, --diff]  # Check only, show diff but don't modify
        stages: [commit]

  # Black - Python code formatter (check only)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Black Format Check
        args: [--check, --diff]  # Check only, don't modify
        language_version: python3.10

  # isort - Import sorter (check only)
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort Check
        args: [--check-only, --diff]  # Check only, don't modify

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key

  # EgoKit policy validation (if you want to dogfood)
  - repo: local
    hooks:
      - id: ego-validate
        name: EgoKit Policy Check
        entry: ego validate --changed
        language: system
        pass_filenames: false
        stages: [commit]
        # Uncomment when EgoKit is installed and configured:
        # always_run: true