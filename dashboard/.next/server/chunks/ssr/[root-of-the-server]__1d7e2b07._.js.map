{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/src/components/ThemeProvider.tsx","turbopack:///[project]/src/components/UnitsProvider.tsx","turbopack:///[project]/src/components/RegionalProvider.tsx"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","'use client'\n\nimport { createContext, useContext, useEffect, useState } from 'react'\n\ntype Theme = 'light' | 'dark'\n\ninterface ThemeContextType {\n  theme: Theme\n  toggleTheme: () => void\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('light')\n\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme') as Theme\n    if (savedTheme) {\n      setTheme(savedTheme)\n    } else {\n      // Check system preference\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches\n      setTheme(systemPrefersDark ? 'dark' : 'light')\n    }\n  }, [])\n\n  useEffect(() => {\n    // Apply theme to document\n    const root = document.documentElement\n    if (theme === 'dark') {\n      root.classList.add('dark')\n    } else {\n      root.classList.remove('dark')\n    }\n    \n    // Save theme preference\n    localStorage.setItem('theme', theme)\n  }, [theme])\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light')\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n","'use client'\n\nimport { createContext, useContext, useEffect, useState } from 'react'\n\ntype UnitSystem = 'metric' | 'imperial'\n\ninterface UnitsContextType {\n  unitSystem: UnitSystem\n  toggleUnits: () => void\n  convertTemperature: (celsius: number) => number\n  convertWindSpeed: (ms: number) => number\n  formatTemperature: (celsius: number) => string\n  formatWindSpeed: (ms: number) => string\n}\n\nconst UnitsContext = createContext<UnitsContextType | undefined>(undefined)\n\nexport function UnitsProvider({ children }: { children: React.ReactNode }) {\n  const [unitSystem, setUnitSystem] = useState<UnitSystem>('metric')\n\n  useEffect(() => {\n    // Check for saved unit preference\n    const savedUnits = localStorage.getItem('unitSystem') as UnitSystem\n    if (savedUnits) {\n      setUnitSystem(savedUnits)\n    } else {\n      // Default to metric for international users, imperial for US\n      const isUS = Intl.DateTimeFormat().resolvedOptions().timeZone?.includes('America')\n      setUnitSystem(isUS ? 'imperial' : 'metric')\n    }\n  }, [])\n\n  useEffect(() => {\n    // Save unit preference\n    localStorage.setItem('unitSystem', unitSystem)\n  }, [unitSystem])\n\n  const toggleUnits = () => {\n    setUnitSystem(prev => prev === 'metric' ? 'imperial' : 'metric')\n  }\n\n  const convertTemperature = (celsius: number) => {\n    return unitSystem === 'metric' ? celsius : (celsius * 9/5) + 32\n  }\n\n  const convertWindSpeed = (ms: number) => {\n    return unitSystem === 'metric' ? ms : ms * 2.237 // m/s to mph\n  }\n\n  const formatTemperature = (celsius: number) => {\n    const converted = convertTemperature(celsius)\n    const unit = unitSystem === 'metric' ? '°C' : '°F'\n    return `${converted.toFixed(1)}${unit}`\n  }\n\n  const formatWindSpeed = (ms: number) => {\n    const converted = convertWindSpeed(ms)\n    const unit = unitSystem === 'metric' ? 'm/s' : 'mph'\n    return `${converted.toFixed(1)} ${unit}`\n  }\n\n  return (\n    <UnitsContext.Provider value={{\n      unitSystem,\n      toggleUnits,\n      convertTemperature,\n      convertWindSpeed,\n      formatTemperature,\n      formatWindSpeed\n    }}>\n      {children}\n    </UnitsContext.Provider>\n  )\n}\n\nexport function useUnits() {\n  const context = useContext(UnitsContext)\n  if (context === undefined) {\n    throw new Error('useUnits must be used within a UnitsProvider')\n  }\n  return context\n}\n","'use client'\n\nimport { createContext, useContext, useEffect, useState } from 'react'\n\n// CAISO Zone definitions based on your existing config\nexport interface CAISOZone {\n  name: string\n  full_name: string\n  latitude: number\n  longitude: number\n  major_city: string\n  description: string\n  load_weight: number\n  climate_region: string\n}\n\nexport const CAISO_ZONES: Record<string, CAISOZone> = {\n  STATEWIDE: {\n    name: 'STATEWIDE',\n    full_name: 'California Statewide',\n    latitude: 36.7783,\n    longitude: -119.4179,\n    major_city: 'California',\n    description: 'Aggregated statewide power demand across all CAISO zones',\n    load_weight: 1.0,\n    climate_region: 'Mixed'\n  },\n  NP15: {\n    name: 'NP15',\n    full_name: 'North of Path 15',\n    latitude: 37.7749,\n    longitude: -122.4194,\n    major_city: 'San Francisco',\n    description: 'Northern California including SF Bay Area, Sacramento Valley',\n    load_weight: 0.25,\n    climate_region: 'Mediterranean coastal'\n  },\n  ZP26: {\n    name: 'ZP26',\n    full_name: 'Fresno/Central Valley',\n    latitude: 36.7378,\n    longitude: -119.7871,\n    major_city: 'Fresno',\n    description: 'Central Valley region, agricultural areas',\n    load_weight: 0.08,\n    climate_region: 'Hot semi-arid'\n  },\n  SP15: {\n    name: 'SP15',\n    full_name: 'South of Path 15',\n    latitude: 34.0522,\n    longitude: -118.2437,\n    major_city: 'Los Angeles',\n    description: 'Southern California including LA Basin, Orange County',\n    load_weight: 0.35,\n    climate_region: 'Mediterranean/semi-arid'\n  },\n  SDGE: {\n    name: 'SDGE',\n    full_name: 'San Diego Gas & Electric',\n    latitude: 32.7157,\n    longitude: -117.1611,\n    major_city: 'San Diego',\n    description: 'San Diego County and Imperial Valley',\n    load_weight: 0.08,\n    climate_region: 'Semi-arid coastal'\n  },\n  SCE: {\n    name: 'SCE',\n    full_name: 'Southern California Edison',\n    latitude: 34.1478,\n    longitude: -117.8265,\n    major_city: 'San Bernardino',\n    description: 'Inland Empire, Riverside, San Bernardino counties',\n    load_weight: 0.15,\n    climate_region: 'Hot semi-arid inland'\n  },\n  PGE_BAY: {\n    name: 'PGE_BAY',\n    full_name: 'PG&E Bay Area',\n    latitude: 37.4419,\n    longitude: -122.1430,\n    major_city: 'Palo Alto',\n    description: 'SF Peninsula, South Bay, Silicon Valley',\n    load_weight: 0.05,\n    climate_region: 'Mediterranean coastal'\n  },\n  PGE_VALLEY: {\n    name: 'PGE_VALLEY',\n    full_name: 'PG&E Central Valley',\n    latitude: 37.6391,\n    longitude: -120.9969,\n    major_city: 'Modesto',\n    description: 'Central Valley within PG&E territory',\n    load_weight: 0.02,\n    climate_region: 'Hot semi-arid'\n  },\n  SMUD: {\n    name: 'SMUD',\n    full_name: 'Sacramento Municipal Utility District',\n    latitude: 38.5816,\n    longitude: -121.4944,\n    major_city: 'Sacramento',\n    description: 'Sacramento metropolitan area',\n    load_weight: 0.02,\n    climate_region: 'Mediterranean inland'\n  }\n}\n\n// Zone categories for better organization\nexport const ZONE_CATEGORIES = {\n  'Major Regions': ['STATEWIDE', 'NP15', 'SP15', 'SDGE', 'SCE'],\n  'Utility Territories': ['PGE_BAY', 'PGE_VALLEY', 'SMUD'],\n  'Geographic Areas': ['ZP26']\n}\n\ninterface RegionalContextType {\n  selectedZone: string\n  setSelectedZone: (zone: string) => void\n  currentZone: CAISOZone\n  allZones: Record<string, CAISOZone>\n  zoneCategories: typeof ZONE_CATEGORIES\n  isStatewide: boolean\n}\n\nconst RegionalContext = createContext<RegionalContextType | undefined>(undefined)\n\nexport function RegionalProvider({ children }: { children: React.ReactNode }) {\n  const [selectedZone, setSelectedZone] = useState<string>('STATEWIDE')\n\n  useEffect(() => {\n    // Check for saved zone preference\n    const savedZone = localStorage.getItem('selectedZone')\n    if (savedZone && CAISO_ZONES[savedZone]) {\n      setSelectedZone(savedZone)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Save zone preference\n    localStorage.setItem('selectedZone', selectedZone)\n  }, [selectedZone])\n\n  const currentZone = CAISO_ZONES[selectedZone]\n  const isStatewide = selectedZone === 'STATEWIDE'\n\n  return (\n    <RegionalContext.Provider value={{\n      selectedZone,\n      setSelectedZone,\n      currentZone,\n      allZones: CAISO_ZONES,\n      zoneCategories: ZONE_CATEGORIES,\n      isStatewide\n    }}>\n      {children}\n    </RegionalContext.Provider>\n  )\n}\n\nexport function useRegional() {\n  const context = useContext(RegionalContext)\n  if (context === undefined) {\n    throw new Error('useRegional must be used within a RegionalProvider')\n  }\n  return context\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"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","ignoreList":[0,1,2]}