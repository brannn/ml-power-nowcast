{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAM6C;QAN7C,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD,GAN7C;IAOb,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAIoD;QAJpD,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D,GAJpD;IAKb,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,KAGI;QAHJ,EACxB,SAAS,EACT,GAAG,OACyB,GAHJ;IAIxB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,KAGoC;QAHpC,EACZ,SAAS,EACT,GAAG,OAC6C,GAHpC;IAIZ,qBACE,6LAAC,2KAAkB;QACjB,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,KAGgC;QAHhC,EAChB,SAAS,EACT,GAAG,OAC6C,GAHhC;IAIhB,qBACE,6LAAC,2KAAkB;QACjB,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,KAGgC;QAHhC,EACnB,SAAS,EACT,GAAG,OACgD,GAHhC;IAInB,qBACE,6LAAC,8KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,4HAAE,EACX,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,KAGgC;QAHhC,EACnB,SAAS,EACT,GAAG,OACgD,GAHhC;IAInB,qBACE,6LAAC,8KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/PredictionChart.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useRef } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js'\nimport { Line } from 'react-chartjs-2'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n)\n\ninterface PredictionPoint {\n  timestamp: string\n  predicted_load: number\n  confidence_lower: number\n  confidence_upper: number\n  hour_ahead: number\n}\n\ninterface PredictionChartProps {\n  predictions: PredictionPoint[]\n}\n\nexport default function PredictionChart({ predictions }: PredictionChartProps) {\n  const chartRef = useRef<ChartJS<'line'>>(null)\n\n  // Force chart update when predictions change\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.update('none') // Update without animation for immediate response\n    }\n  }, [predictions])\n\n  if (!predictions || predictions.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-muted-foreground\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium\">No prediction data available</div>\n          <div className=\"text-sm\">Click refresh to load predictions</div>\n        </div>\n      </div>\n    )\n  }\n\n  // Prepare data for Chart.js with Pacific Time formatting\n  const labels = predictions.map(p => {\n    const date = new Date(p.timestamp)\n    // Format as Pacific Time (PT/PST/PDT)\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: 'America/Los_Angeles',\n      hour12: false // Use 24-hour format for clarity\n    })\n  })\n\n  const predictedData = predictions.map(p => p.predicted_load)\n  const confidenceLower = predictions.map(p => p.confidence_lower)\n  const confidenceUpper = predictions.map(p => p.confidence_upper)\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Predicted Demand',\n        data: predictedData,\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        borderWidth: 3,\n        pointBackgroundColor: 'rgb(59, 130, 246)',\n        pointBorderColor: 'white',\n        pointBorderWidth: 2,\n        pointRadius: 6,\n        tension: 0.4,\n      },\n      {\n        label: 'Confidence Upper',\n        data: confidenceUpper,\n        borderColor: 'rgba(59, 130, 246, 0.3)',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        borderWidth: 1,\n        borderDash: [5, 5],\n        pointRadius: 0,\n        fill: '+1',\n        tension: 0.4,\n      },\n      {\n        label: 'Confidence Lower',\n        data: confidenceLower,\n        borderColor: 'rgba(59, 130, 246, 0.3)',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        borderWidth: 1,\n        borderDash: [5, 5],\n        pointRadius: 0,\n        fill: false,\n        tension: 0.4,\n      },\n    ],\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          filter: (legendItem: any) => {\n            // Hide confidence bound labels from legend\n            return legendItem.text === 'Predicted Demand'\n          },\n          usePointStyle: true,\n          padding: 20,\n        },\n      },\n      title: {\n        display: false,\n      },\n      tooltip: {\n        mode: 'index' as const,\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: 'white',\n        bodyColor: 'white',\n        borderColor: 'rgba(59, 130, 246, 0.5)',\n        borderWidth: 1,\n        callbacks: {\n          label: function(context: any) {\n            const datasetLabel = context.dataset.label\n            const value = context.parsed.y\n            \n            if (datasetLabel === 'Predicted Demand') {\n              return `${datasetLabel}: ${value.toFixed(0)} MW`\n            }\n            return '' // Hide confidence bounds from tooltip\n          },\n          afterBody: function(tooltipItems: any[]) {\n            const index = tooltipItems[0].dataIndex\n            const pred = predictions[index]\n            const range = pred.confidence_upper - pred.confidence_lower\n            return [\n              '',\n              `Confidence Range: ±${(range/2).toFixed(0)} MW`,\n              `Time: +${pred.hour_ahead} hour${pred.hour_ahead > 1 ? 's' : ''}`\n            ]\n          }\n        }\n      },\n    },\n    interaction: {\n      mode: 'nearest' as const,\n      axis: 'x' as const,\n      intersect: false,\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time (Pacific)',\n          font: {\n            size: 14,\n            weight: 'bold' as const,\n          },\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n        ticks: {\n          maxTicksLimit: 8,\n        },\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Power Demand (MW)',\n          font: {\n            size: 14,\n            weight: 'bold' as const,\n          },\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n        ticks: {\n          callback: function(value: any) {\n            return `${value.toLocaleString()} MW`\n          },\n        },\n      },\n    },\n    elements: {\n      point: {\n        hoverRadius: 8,\n      },\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart' as const,\n    },\n  }\n\n  // Create a key based on the predictions to force re-render when data changes\n  const chartKey = predictions.map(p => `${p.hour_ahead}-${p.predicted_load}`).join(',')\n\n  return (\n    <div className=\"h-80 w-full\">\n      <Line\n        key={chartKey}\n        ref={chartRef}\n        data={data}\n        options={options}\n      />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAWA;;;AAdA;;;;AAgBA,wKAAO,CAAC,QAAQ,CACd,gLAAa,EACb,8KAAW,EACX,+KAAY,EACZ,8KAAW,EACX,wKAAK,EACL,0KAAO,EACP,yKAAM,EACN,yKAAM;AAeO,SAAS,gBAAgB,KAAqC;QAArC,EAAE,WAAW,EAAwB,GAArC;;IACtC,MAAM,WAAW,IAAA,uKAAM,EAAkB;IAEzC,6CAA6C;IAC7C,IAAA,0KAAS;qCAAC;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,MAAM,CAAC,SAAQ,kDAAkD;YACpF;QACF;oCAAG;QAAC;KAAY;IAEhB,IAAI,CAAC,eAAe,YAAY,MAAM,KAAK,GAAG;QAC5C,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAsB;;;;;;kCACrC,6LAAC;wBAAI,WAAU;kCAAU;;;;;;;;;;;;;;;;;IAIjC;IAEA,yDAAyD;IACzD,MAAM,SAAS,YAAY,GAAG,CAAC,CAAA;QAC7B,MAAM,OAAO,IAAI,KAAK,EAAE,SAAS;QACjC,sCAAsC;QACtC,OAAO,KAAK,kBAAkB,CAAC,SAAS;YACtC,MAAM;YACN,QAAQ;YACR,UAAU;YACV,QAAQ,MAAM,iCAAiC;QACjD;IACF;IAEA,MAAM,gBAAgB,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,cAAc;IAC3D,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,gBAAgB;IAC/D,MAAM,kBAAkB,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,gBAAgB;IAE/D,MAAM,OAAO;QACX;QACA,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,sBAAsB;gBACtB,kBAAkB;gBAClB,kBAAkB;gBAClB,aAAa;gBACb,SAAS;YACX;YACA;gBACE,OAAO;gBACP,MAAM;gBACN,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,YAAY;oBAAC;oBAAG;iBAAE;gBAClB,aAAa;gBACb,MAAM;gBACN,SAAS;YACX;YACA;gBACE,OAAO;gBACP,MAAM;gBACN,aAAa;gBACb,iBAAiB;gBACjB,aAAa;gBACb,YAAY;oBAAC;oBAAG;iBAAE;gBAClB,aAAa;gBACb,MAAM;gBACN,SAAS;YACX;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,QAAQ,CAAC;wBACP,2CAA2C;wBAC3C,OAAO,WAAW,IAAI,KAAK;oBAC7B;oBACA,eAAe;oBACf,SAAS;gBACX;YACF;YACA,OAAO;gBACL,SAAS;YACX;YACA,SAAS;gBACP,MAAM;gBACN,WAAW;gBACX,iBAAiB;gBACjB,YAAY;gBACZ,WAAW;gBACX,aAAa;gBACb,aAAa;gBACb,WAAW;oBACT,OAAO,SAAS,OAAY;wBAC1B,MAAM,eAAe,QAAQ,OAAO,CAAC,KAAK;wBAC1C,MAAM,QAAQ,QAAQ,MAAM,CAAC,CAAC;wBAE9B,IAAI,iBAAiB,oBAAoB;4BACvC,OAAO,AAAC,GAAmB,OAAjB,cAAa,MAAqB,OAAjB,MAAM,OAAO,CAAC,IAAG;wBAC9C;wBACA,OAAO,GAAG,sCAAsC;;oBAClD;oBACA,WAAW,SAAS,YAAmB;wBACrC,MAAM,QAAQ,YAAY,CAAC,EAAE,CAAC,SAAS;wBACvC,MAAM,OAAO,WAAW,CAAC,MAAM;wBAC/B,MAAM,QAAQ,KAAK,gBAAgB,GAAG,KAAK,gBAAgB;wBAC3D,OAAO;4BACL;4BACC,sBAA0C,OAArB,CAAC,QAAM,CAAC,EAAE,OAAO,CAAC,IAAG;4BAC1C,UAAgC,OAAvB,KAAK,UAAU,EAAC,SAAsC,OAA/B,KAAK,UAAU,GAAG,IAAI,MAAM;yBAC9D;oBACH;gBACF;YACF;QACF;QACA,aAAa;YACX,MAAM;YACN,MAAM;YACN,WAAW;QACb;QACA,QAAQ;YACN,GAAG;gBACD,SAAS;gBACT,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,MAAM;wBACJ,MAAM;wBACN,QAAQ;oBACV;gBACF;gBACA,MAAM;oBACJ,OAAO;gBACT;gBACA,OAAO;oBACL,eAAe;gBACjB;YACF;YACA,GAAG;gBACD,SAAS;gBACT,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,MAAM;wBACJ,MAAM;wBACN,QAAQ;oBACV;gBACF;gBACA,MAAM;oBACJ,OAAO;gBACT;gBACA,OAAO;oBACL,UAAU,SAAS,KAAU;wBAC3B,OAAO,AAAC,GAAyB,OAAvB,MAAM,cAAc,IAAG;oBACnC;gBACF;YACF;QACF;QACA,UAAU;YACR,OAAO;gBACL,aAAa;YACf;QACF;QACA,WAAW;YACT,UAAU;YACV,QAAQ;QACV;IACF;IAEA,6EAA6E;IAC7E,MAAM,WAAW,YAAY,GAAG,CAAC,CAAA,IAAK,AAAC,GAAkB,OAAhB,EAAE,UAAU,EAAC,KAAoB,OAAjB,EAAE,cAAc,GAAI,IAAI,CAAC;IAElF,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,iKAAI;YAEH,KAAK;YACL,MAAM;YACN,SAAS;WAHJ;;;;;;;;;;AAOb;GAjMwB;KAAA","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/HistoricalChart.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\nimport { Line } from 'react-chartjs-2'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\ninterface HistoricalDataPoint {\n  timestamp: string\n  actual_load: number\n  predicted_load: number\n  temperature: number\n  humidity: number\n}\n\ninterface HistoricalChartProps {\n  apiBase: string\n  selectedZone: string\n  selectedModel: string\n}\n\nexport default function HistoricalChart({ apiBase, selectedZone, selectedModel }: HistoricalChartProps) {\n  const [historicalData, setHistoricalData] = useState<HistoricalDataPoint[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      setLoading(true)\n      setError(null)\n\n      try {\n        const response = await fetch(`${apiBase}/historical?days=7&zone=${selectedZone}&model_id=${selectedModel}`)\n        if (!response.ok) {\n          throw new Error(`Failed to fetch historical data: ${response.status}`)\n        }\n        \n        const data = await response.json()\n        setHistoricalData(data)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load historical data')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchHistoricalData()\n  }, [apiBase, selectedZone, selectedModel])\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n          <div className=\"mt-2 text-sm text-muted-foreground flex items-center gap-2 justify-center\">\n            <div className=\"w-2 h-2 bg-blue-600 rounded-full animate-pulse\"></div>\n            Loading historical data...\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-red-600\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium\">Error loading data</div>\n          <div className=\"text-sm\">{error}</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!historicalData || historicalData.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-muted-foreground\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium\">No historical data available</div>\n          <div className=\"text-sm\">Historical data will appear here once available</div>\n        </div>\n      </div>\n    )\n  }\n\n  // Sample data to hourly intervals for smooth chart rendering\n  const sampleData = (data: any[], targetPoints: number = 168) => {\n    if (data.length <= targetPoints) return data;\n    const interval = Math.ceil(data.length / targetPoints);\n    return data.filter((_, index) => index % interval === 0);\n  };\n\n  const sampledData = sampleData(historicalData);\n\n  // Prepare data for Chart.js\n  const labels = sampledData.map(point => {\n    const date = new Date(point.timestamp)\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit'\n    })\n  })\n\n  const actualData = sampledData.map(point => point.actual_load)\n  const predictedData = sampledData.map(point => point.predicted_load)\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Actual Demand',\n        data: actualData,\n        borderColor: 'rgb(34, 197, 94)',\n        backgroundColor: 'rgba(34, 197, 94, 0.1)',\n        borderWidth: 2,\n        pointBackgroundColor: 'rgb(34, 197, 94)',\n        pointBorderColor: 'white',\n        pointBorderWidth: 2,\n        pointRadius: 0, // Hide individual points\n        tension: 0.7, // High smoothing for actual data\n        cubicInterpolationMode: 'monotone' as const,\n        spanGaps: true,\n      },\n      {\n        label: 'Predicted Demand',\n        data: predictedData,\n        borderColor: 'rgb(59, 130, 246)',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        borderWidth: 2,\n        pointBackgroundColor: 'rgb(59, 130, 246)',\n        pointBorderColor: 'white',\n        pointBorderWidth: 2,\n        pointRadius: 0, // Hide individual points to reduce visual noise\n        tension: 0.9, // Maximum smoothing\n        cubicInterpolationMode: 'monotone' as const, // Smoother interpolation\n        spanGaps: true, // Connect across gaps smoothly\n      },\n    ],\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          usePointStyle: true,\n          padding: 20,\n        },\n      },\n      title: {\n        display: false,\n      },\n      tooltip: {\n        mode: 'index' as const,\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: 'white',\n        bodyColor: 'white',\n        borderColor: 'rgba(59, 130, 246, 0.5)',\n        borderWidth: 1,\n        callbacks: {\n          label: function(context: any) {\n            const datasetLabel = context.dataset.label\n            const value = context.parsed.y\n            return `${datasetLabel}: ${value.toFixed(0)} MW`\n          },\n          afterBody: function(tooltipItems: any[]) {\n            const index = tooltipItems[0].dataIndex\n            const point = historicalData[index]\n            const error = Math.abs(point.actual_load - point.predicted_load)\n            const errorPercent = (error / point.actual_load) * 100\n            \n            return [\n              '',\n              `Error: ${error.toFixed(0)} MW (${errorPercent.toFixed(1)}%)`,\n              `Temperature: ${point.temperature.toFixed(1)}°C`,\n              `Humidity: ${point.humidity.toFixed(0)}%`\n            ]\n          }\n        }\n      },\n    },\n    interaction: {\n      mode: 'nearest' as const,\n      axis: 'x' as const,\n      intersect: false,\n    },\n    scales: {\n      x: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Time',\n          font: {\n            size: 14,\n            weight: 'bold' as const,\n          },\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n        ticks: {\n          maxTicksLimit: 12,\n        },\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Power Demand (MW)',\n          font: {\n            size: 14,\n            weight: 'bold' as const,\n          },\n        },\n        grid: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n        ticks: {\n          callback: function(value: any) {\n            return `${value.toLocaleString()} MW`\n          },\n        },\n      },\n    },\n    elements: {\n      point: {\n        hoverRadius: 6,\n      },\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuart' as const,\n    },\n  }\n\n  // Calculate some statistics\n  const errors = historicalData.map(point => \n    Math.abs(point.actual_load - point.predicted_load)\n  )\n  const meanError = errors.reduce((sum, error) => sum + error, 0) / errors.length\n  const maxError = Math.max(...errors)\n  const minError = Math.min(...errors)\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"h-80 w-full\">\n        <Line data={data} options={options} />\n      </div>\n      \n      {/* Performance Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 pt-4 border-t\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">{meanError.toFixed(0)} MW</div>\n          <div className=\"text-sm text-muted-foreground\">Average Error</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">{maxError.toFixed(0)} MW</div>\n          <div className=\"text-sm text-muted-foreground\">Maximum Error</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-purple-600\">{minError.toFixed(0)} MW</div>\n          <div className=\"text-sm text-muted-foreground\">Minimum Error</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/MetricsGrid.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { useTheme } from '@/components/ThemeProvider'\nimport {\n  Target,\n  TrendingUp,\n  BarChart3,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Activity,\n  Gauge\n} from 'lucide-react'\n\ninterface ModelMetrics {\n  mae: number\n  rmse: number\n  r2: number\n  mape: number\n  last_updated: string\n}\n\ninterface MetricsGridProps {\n  metrics: ModelMetrics | null\n  modelInfo?: any\n}\n\nexport default function MetricsGrid({ metrics, modelInfo }: MetricsGridProps) {\n  const { theme } = useTheme()\n\n  if (!metrics) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-muted-foreground\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium\">No metrics available</div>\n          <div className=\"text-sm\">Model metrics will appear here once loaded</div>\n        </div>\n      </div>\n    )\n  }\n\n  const getPerformanceLevel = (mape: number) => {\n    if (mape < 3) return { level: 'Excellent', color: 'bg-green-500', icon: CheckCircle }\n    if (mape < 5) return { level: 'Very Good', color: 'bg-blue-500', icon: CheckCircle }\n    if (mape < 10) return { level: 'Good', color: 'bg-yellow-500', icon: AlertCircle }\n    return { level: 'Needs Improvement', color: 'bg-red-500', icon: AlertCircle }\n  }\n\n  const getR2Level = (r2: number) => {\n    if (r2 > 0.95) return { level: 'Excellent', color: 'text-green-600' }\n    if (r2 > 0.90) return { level: 'Very Good', color: 'text-blue-600' }\n    if (r2 > 0.80) return { level: 'Good', color: 'text-yellow-600' }\n    return { level: 'Poor', color: 'text-red-600' }\n  }\n\n  // Composite performance assessment considering both MAPE and R²\n  const getCompositePerformance = (mape: number, r2: number) => {\n    const mapeScore = mape < 3 ? 4 : mape < 5 ? 3 : mape < 10 ? 2 : 1\n    const r2Score = r2 > 0.95 ? 4 : r2 > 0.90 ? 3 : r2 > 0.80 ? 2 : 1\n    const avgScore = (mapeScore + r2Score) / 2\n\n    if (avgScore >= 3.5) return { level: 'Excellent', color: 'bg-green-500', icon: CheckCircle }\n    if (avgScore >= 2.5) return { level: 'Very Good', color: 'bg-blue-500', icon: CheckCircle }\n    if (avgScore >= 1.5) return { level: 'Good', color: 'bg-yellow-500', icon: AlertCircle }\n    return { level: 'Needs Improvement', color: 'bg-red-500', icon: AlertCircle }\n  }\n\n  const mapePerformance = getPerformanceLevel(metrics.mape)\n  const r2Performance = getR2Level(metrics.r2)\n  const performance = getCompositePerformance(metrics.mape, metrics.r2)\n  const PerformanceIcon = performance.icon\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Overall Performance Summary */}\n      <Card className=\"border-2\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <div className={`p-2 rounded-lg ${\n              performance.level === 'Excellent'\n                ? (theme === 'dark' ? 'bg-green-900/50' : 'bg-green-100')\n                : performance.level === 'Very Good'\n                ? (theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100')\n                : performance.level === 'Good'\n                ? (theme === 'dark' ? 'bg-yellow-900/50' : 'bg-yellow-100')\n                : (theme === 'dark' ? 'bg-red-900/50' : 'bg-red-100')\n            }`}>\n              <PerformanceIcon className={`h-5 w-5 ${performance.level === 'Excellent' ? 'text-green-600' : performance.level === 'Very Good' ? 'text-blue-600' : performance.level === 'Good' ? 'text-yellow-600' : 'text-red-600'}`} />\n            </div>\n            Model Performance Summary\n          </CardTitle>\n          <CardDescription>\n            Overall assessment of the power demand forecasting model\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <div>\n                <div className=\"text-2xl font-bold\">{metrics.mape.toFixed(1)}%</div>\n                <div className=\"text-xs text-muted-foreground\">MAPE (Real-time)</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold\">{(metrics.r2 * 100).toFixed(1)}%</div>\n                <div className=\"text-xs text-muted-foreground\">R² Score</div>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <Badge className={`${performance.color} text-white`}>\n                {performance.level}\n              </Badge>\n              <div className=\"text-sm text-muted-foreground mt-1\">\n                Composite Score\n              </div>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                MAPE: {mapePerformance.level} • R²: {r2Performance.level}\n              </div>\n            </div>\n          </div>\n\n          {/* Model Static Accuracy */}\n          {modelInfo && (\n            <div className=\"border-t pt-3\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"text-lg font-semibold\">{modelInfo.accuracy.toFixed(1)}%</div>\n                  <div className=\"text-xs text-muted-foreground\">Model Accuracy (Static)</div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-sm font-medium\">{modelInfo.name}</div>\n                  <div className=\"text-xs text-muted-foreground\">v{modelInfo.version}</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Detailed Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Mean Absolute Error */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Mean Absolute Error</CardTitle>\n            <div className={`p-1.5 rounded-md ${\n              theme === 'dark' ? 'bg-red-900/50' : 'bg-red-100'\n            }`}>\n              <Target className=\"h-4 w-4 text-red-600\" />\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.mae.toFixed(0)} MW</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average prediction error\n            </p>\n            <div className=\"mt-2 text-xs\">\n              <span className=\"text-muted-foreground\">\n                Lower is better • Target: &lt;500 MW\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Root Mean Square Error */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Root Mean Square Error</CardTitle>\n            <div className={`p-1.5 rounded-md ${\n              theme === 'dark' ? 'bg-orange-900/50' : 'bg-orange-100'\n            }`}>\n              <BarChart3 className=\"h-4 w-4 text-orange-600\" />\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.rmse.toFixed(0)} MW</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Penalizes large errors more\n            </p>\n            <div className=\"mt-2 text-xs\">\n              <span className=\"text-muted-foreground\">\n                Lower is better • Target: &lt;800 MW\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* R-squared Score */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">R² Score</CardTitle>\n            <div className={`p-1.5 rounded-md ${\n              theme === 'dark' ? 'bg-green-900/50' : 'bg-green-100'\n            }`}>\n              <TrendingUp className=\"h-4 w-4 text-green-600\" />\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.r2.toFixed(3)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Variance explained by model\n            </p>\n            <div className=\"mt-2 text-xs\">\n              <span className={r2Performance.color}>\n                {r2Performance.level} • {(metrics.r2 * 100).toFixed(1)}% explained\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Last Updated */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Last Updated</CardTitle>\n            <div className={`p-1.5 rounded-md ${\n              theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100'\n            }`}>\n              <Clock className=\"h-4 w-4 text-blue-600\" />\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-lg font-bold\">\n              {formatDate(metrics.last_updated).split(',')[1]?.trim() || 'Unknown'}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {formatDate(metrics.last_updated).split(',')[0]}\n            </p>\n            <div className=\"mt-2 text-xs\">\n              <span className=\"text-muted-foreground\">\n                Model training time\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Performance Interpretation */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Performance Interpretation</CardTitle>\n          <CardDescription>\n            What these metrics mean for power demand forecasting operations\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-semibold mb-2\">Accuracy Assessment</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-blue-400' : 'bg-blue-500'\n                  }`}></div>\n                  <span>\n                    <strong>MAPE {metrics.mape.toFixed(1)}%:</strong> This model predicts within {metrics.mape.toFixed(1)}% of actual demand on average\n                  </span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-green-400' : 'bg-green-500'\n                  }`}></div>\n                  <span>\n                    <strong>MAE {metrics.mae.toFixed(0)} MW:</strong> Typical prediction error is ±{metrics.mae.toFixed(0)} MW\n                  </span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-purple-400' : 'bg-purple-500'\n                  }`}></div>\n                  <span>\n                    <strong>R² {metrics.r2.toFixed(3)}:</strong> Model explains {(metrics.r2 * 100).toFixed(1)}% of demand variation\n                  </span>\n                </li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold mb-2\">Learning Insights</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-yellow-400' : 'bg-yellow-500'\n                  }`}></div>\n                  <span>\n                    California's power demand follows predictable daily and seasonal patterns\n                  </span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-red-400' : 'bg-red-500'\n                  }`}></div>\n                  <span>\n                    Weather strongly influences demand - hot days drive AC usage peaks\n                  </span>\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <div className={`w-2 h-2 rounded-full mt-1.5 flex-shrink-0 ${\n                    theme === 'dark' ? 'bg-indigo-400' : 'bg-indigo-500'\n                  }`}></div>\n                  <span>\n                    LSTM models excel at capturing temporal sequences in power data\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Performance Benchmarks */}\n          <div className=\"border-t pt-4\">\n            <h4 className=\"font-semibold mb-2\">Industry Benchmarks</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div className={`text-center p-3 rounded-lg border ${\n                theme === 'dark'\n                  ? 'bg-green-900/20 border-green-800/30'\n                  : 'bg-green-50 border-green-200'\n              }`}>\n                <div className={`font-semibold ${\n                  theme === 'dark' ? 'text-green-300' : 'text-green-700'\n                }`}>Excellent</div>\n                <div className={`${\n                  theme === 'dark' ? 'text-green-400' : 'text-green-600'\n                }`}>MAPE &lt; 3%</div>\n                <div className={`text-xs mt-1 ${\n                  theme === 'dark' ? 'text-green-500' : 'text-green-500'\n                }`}>Research-grade accuracy</div>\n              </div>\n              <div className={`text-center p-3 rounded-lg border ${\n                theme === 'dark'\n                  ? 'bg-blue-900/20 border-blue-800/30'\n                  : 'bg-blue-50 border-blue-200'\n              }`}>\n                <div className={`font-semibold ${\n                  theme === 'dark' ? 'text-blue-300' : 'text-blue-700'\n                }`}>Production Ready</div>\n                <div className={`${\n                  theme === 'dark' ? 'text-blue-400' : 'text-blue-600'\n                }`}>MAPE 3-5%</div>\n                <div className={`text-xs mt-1 ${\n                  theme === 'dark' ? 'text-blue-500' : 'text-blue-500'\n                }`}>Commercial deployment</div>\n              </div>\n              <div className={`text-center p-3 rounded-lg border ${\n                theme === 'dark'\n                  ? 'bg-yellow-900/20 border-yellow-800/30'\n                  : 'bg-yellow-50 border-yellow-200'\n              }`}>\n                <div className={`font-semibold ${\n                  theme === 'dark' ? 'text-yellow-300' : 'text-yellow-700'\n                }`}>Acceptable</div>\n                <div className={`${\n                  theme === 'dark' ? 'text-yellow-400' : 'text-yellow-600'\n                }`}>MAPE 5-10%</div>\n                <div className={`text-xs mt-1 ${\n                  theme === 'dark' ? 'text-yellow-500' : 'text-yellow-500'\n                }`}>Operational with monitoring</div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AALA;;;;;AA6Be,SAAS,YAAY,KAAwC;QAAxC,EAAE,OAAO,EAAE,SAAS,EAAoB,GAAxC;QA4MrB;;IA3Mb,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,kJAAQ;IAE1B,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAsB;;;;;;kCACrC,6LAAC;wBAAI,WAAU;kCAAU;;;;;;;;;;;;;;;;;IAIjC;IAEA,MAAM,sBAAsB,CAAC;QAC3B,IAAI,OAAO,GAAG,OAAO;YAAE,OAAO;YAAa,OAAO;YAAgB,MAAM,6OAAW;QAAC;QACpF,IAAI,OAAO,GAAG,OAAO;YAAE,OAAO;YAAa,OAAO;YAAe,MAAM,6OAAW;QAAC;QACnF,IAAI,OAAO,IAAI,OAAO;YAAE,OAAO;YAAQ,OAAO;YAAiB,MAAM,sOAAW;QAAC;QACjF,OAAO;YAAE,OAAO;YAAqB,OAAO;YAAc,MAAM,sOAAW;QAAC;IAC9E;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,KAAK,MAAM,OAAO;YAAE,OAAO;YAAa,OAAO;QAAiB;QACpE,IAAI,KAAK,MAAM,OAAO;YAAE,OAAO;YAAa,OAAO;QAAgB;QACnE,IAAI,KAAK,MAAM,OAAO;YAAE,OAAO;YAAQ,OAAO;QAAkB;QAChE,OAAO;YAAE,OAAO;YAAQ,OAAO;QAAe;IAChD;IAEA,gEAAgE;IAChE,MAAM,0BAA0B,CAAC,MAAc;QAC7C,MAAM,YAAY,OAAO,IAAI,IAAI,OAAO,IAAI,IAAI,OAAO,KAAK,IAAI;QAChE,MAAM,UAAU,KAAK,OAAO,IAAI,KAAK,OAAO,IAAI,KAAK,OAAO,IAAI;QAChE,MAAM,WAAW,CAAC,YAAY,OAAO,IAAI;QAEzC,IAAI,YAAY,KAAK,OAAO;YAAE,OAAO;YAAa,OAAO;YAAgB,MAAM,6OAAW;QAAC;QAC3F,IAAI,YAAY,KAAK,OAAO;YAAE,OAAO;YAAa,OAAO;YAAe,MAAM,6OAAW;QAAC;QAC1F,IAAI,YAAY,KAAK,OAAO;YAAE,OAAO;YAAQ,OAAO;YAAiB,MAAM,sOAAW;QAAC;QACvF,OAAO;YAAE,OAAO;YAAqB,OAAO;YAAc,MAAM,sOAAW;QAAC;IAC9E;IAEA,MAAM,kBAAkB,oBAAoB,QAAQ,IAAI;IACxD,MAAM,gBAAgB,WAAW,QAAQ,EAAE;IAC3C,MAAM,cAAc,wBAAwB,QAAQ,IAAI,EAAE,QAAQ,EAAE;IACpE,MAAM,kBAAkB,YAAY,IAAI;IAExC,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,YAAY,cAAc,CAAC,SAAS;YAClD,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACV;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,2IAAI;gBAAC,WAAU;;kCACd,6LAAC,iJAAU;;0CACT,6LAAC,gJAAS;gCAAC,WAAU;;kDACnB,6LAAC;wCAAI,WAAW,AAAC,kBAQhB,OAPC,YAAY,KAAK,KAAK,cACjB,UAAU,SAAS,oBAAoB,iBACxC,YAAY,KAAK,KAAK,cACrB,UAAU,SAAS,mBAAmB,gBACvC,YAAY,KAAK,KAAK,SACrB,UAAU,SAAS,qBAAqB,kBACxC,UAAU,SAAS,kBAAkB;kDAE1C,cAAA,6LAAC;4CAAgB,WAAW,AAAC,WAAyL,OAA/K,YAAY,KAAK,KAAK,cAAc,mBAAmB,YAAY,KAAK,KAAK,cAAc,kBAAkB,YAAY,KAAK,KAAK,SAAS,oBAAoB;;;;;;;;;;;oCACnM;;;;;;;0CAGR,6LAAC,sJAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,kJAAW;wBAAC,WAAU;;0CACrB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC;wDAAI,WAAU;;4DAAsB,QAAQ,IAAI,CAAC,OAAO,CAAC;4DAAG;;;;;;;kEAC7D,6LAAC;wDAAI,WAAU;kEAAgC;;;;;;;;;;;;0DAEjD,6LAAC;;kEACC,6LAAC;wDAAI,WAAU;;4DAAsB,CAAC,QAAQ,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC;4DAAG;;;;;;;kEACnE,6LAAC;wDAAI,WAAU;kEAAgC;;;;;;;;;;;;;;;;;;kDAGnD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6IAAK;gDAAC,WAAW,AAAC,GAAoB,OAAlB,YAAY,KAAK,EAAC;0DACpC,YAAY,KAAK;;;;;;0DAEpB,6LAAC;gDAAI,WAAU;0DAAqC;;;;;;0DAGpD,6LAAC;gDAAI,WAAU;;oDAAqC;oDAC3C,gBAAgB,KAAK;oDAAC;oDAAQ,cAAc,KAAK;;;;;;;;;;;;;;;;;;;4BAM7D,2BACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAI,WAAU;;wDAAyB,UAAU,QAAQ,CAAC,OAAO,CAAC;wDAAG;;;;;;;8DACtE,6LAAC;oDAAI,WAAU;8DAAgC;;;;;;;;;;;;sDAEjD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAuB,UAAU,IAAI;;;;;;8DACpD,6LAAC;oDAAI,WAAU;;wDAAgC;wDAAE,UAAU,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAS9E,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,2IAAI;;0CACH,6LAAC,iJAAU;gCAAC,WAAU;;kDACpB,6LAAC,gJAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC;wCAAI,WAAW,AAAC,oBAEhB,OADC,UAAU,SAAS,kBAAkB;kDAErC,cAAA,6LAAC,mNAAM;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAGtB,6LAAC,kJAAW;;kDACV,6LAAC;wCAAI,WAAU;;4CAAsB,QAAQ,GAAG,CAAC,OAAO,CAAC;4CAAG;;;;;;;kDAC5D,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;kDAG7C,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;kCAQ9C,6LAAC,2IAAI;;0CACH,6LAAC,iJAAU;gCAAC,WAAU;;kDACpB,6LAAC,gJAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC;wCAAI,WAAW,AAAC,oBAEhB,OADC,UAAU,SAAS,qBAAqB;kDAExC,cAAA,6LAAC,kOAAS;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAGzB,6LAAC,kJAAW;;kDACV,6LAAC;wCAAI,WAAU;;4CAAsB,QAAQ,IAAI,CAAC,OAAO,CAAC;4CAAG;;;;;;;kDAC7D,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;kDAG7C,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;kCAQ9C,6LAAC,2IAAI;;0CACH,6LAAC,iJAAU;gCAAC,WAAU;;kDACpB,6LAAC,gJAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC;wCAAI,WAAW,AAAC,oBAEhB,OADC,UAAU,SAAS,oBAAoB;kDAEvC,cAAA,6LAAC,mOAAU;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAG1B,6LAAC,kJAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,QAAQ,EAAE,CAAC,OAAO,CAAC;;;;;;kDACxD,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;kDAG7C,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAW,cAAc,KAAK;;gDACjC,cAAc,KAAK;gDAAC;gDAAI,CAAC,QAAQ,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;;;;;;kCAO/D,6LAAC,2IAAI;;0CACH,6LAAC,iJAAU;gCAAC,WAAU;;kDACpB,6LAAC,gJAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC;wCAAI,WAAW,AAAC,oBAEhB,OADC,UAAU,SAAS,mBAAmB;kDAEtC,cAAA,6LAAC,gNAAK;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAGrB,6LAAC,kJAAW;;kDACV,6LAAC;wCAAI,WAAU;kDACZ,EAAA,qBAAA,WAAW,QAAQ,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,cAA9C,yCAAA,mBAAgD,IAAI,OAAM;;;;;;kDAE7D,6LAAC;wCAAE,WAAU;kDACV,WAAW,QAAQ,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;;;;;;kDAEjD,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAShD,6LAAC,2IAAI;;kCACH,6LAAC,iJAAU;;0CACT,6LAAC,gJAAS;0CAAC;;;;;;0CACX,6LAAC,sJAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,kJAAW;wBAAC,WAAU;;0CACrB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAqB;;;;;;0DACnC,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,gBAAgB;;;;;;0EAErC,6LAAC;;kFACC,6LAAC;;4EAAO;4EAAM,QAAQ,IAAI,CAAC,OAAO,CAAC;4EAAG;;;;;;;oEAAW;oEAA6B,QAAQ,IAAI,CAAC,OAAO,CAAC;oEAAG;;;;;;;;;;;;;kEAG1G,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,iBAAiB;;;;;;0EAEtC,6LAAC;;kFACC,6LAAC;;4EAAO;4EAAK,QAAQ,GAAG,CAAC,OAAO,CAAC;4EAAG;;;;;;;oEAAa;oEAA+B,QAAQ,GAAG,CAAC,OAAO,CAAC;oEAAG;;;;;;;;;;;;;kEAG3G,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,kBAAkB;;;;;;0EAEvC,6LAAC;;kFACC,6LAAC;;4EAAO;4EAAI,QAAQ,EAAE,CAAC,OAAO,CAAC;4EAAG;;;;;;;oEAAU;oEAAiB,CAAC,QAAQ,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC;oEAAG;;;;;;;;;;;;;;;;;;;;;;;;;kDAMnG,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAqB;;;;;;0DACnC,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,kBAAkB;;;;;;0EAEvC,6LAAC;0EAAK;;;;;;;;;;;;kEAIR,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,eAAe;;;;;;0EAEpC,6LAAC;0EAAK;;;;;;;;;;;;kEAIR,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAI,WAAW,AAAC,6CAEhB,OADC,UAAU,SAAS,kBAAkB;;;;;;0EAEvC,6LAAC;0EAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CASd,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAW,AAAC,qCAIhB,OAHC,UAAU,SACN,wCACA;;kEAEJ,6LAAC;wDAAI,WAAW,AAAC,iBAEhB,OADC,UAAU,SAAS,mBAAmB;kEACpC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,GAEhB,OADC,UAAU,SAAS,mBAAmB;kEACpC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,gBAEhB,OADC,UAAU,SAAS,mBAAmB;kEACpC;;;;;;;;;;;;0DAEN,6LAAC;gDAAI,WAAW,AAAC,qCAIhB,OAHC,UAAU,SACN,sCACA;;kEAEJ,6LAAC;wDAAI,WAAW,AAAC,iBAEhB,OADC,UAAU,SAAS,kBAAkB;kEACnC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,GAEhB,OADC,UAAU,SAAS,kBAAkB;kEACnC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,gBAEhB,OADC,UAAU,SAAS,kBAAkB;kEACnC;;;;;;;;;;;;0DAEN,6LAAC;gDAAI,WAAW,AAAC,qCAIhB,OAHC,UAAU,SACN,0CACA;;kEAEJ,6LAAC;wDAAI,WAAW,AAAC,iBAEhB,OADC,UAAU,SAAS,oBAAoB;kEACrC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,GAEhB,OADC,UAAU,SAAS,oBAAoB;kEACrC;;;;;;kEACJ,6LAAC;wDAAI,WAAW,AAAC,gBAEhB,OADC,UAAU,SAAS,oBAAoB;kEACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpB;GAxVwB;;QACJ,kJAAQ;;;KADJ","debugId":null}},
    {"offset": {"line": 2200, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/DemandTrendCard.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { TrendingUp, TrendingDown, Minus, Clock, Zap } from 'lucide-react'\nimport { useTheme } from './ThemeProvider'\n\ninterface DemandTrendData {\n  zone: string\n  current_load: number\n  trend_direction: string\n  trend_percentage: number\n  next_peak_time: string\n  next_peak_load: number\n  hours_to_peak: number\n  is_peak_hours: boolean\n  timestamp: string\n}\n\ninterface DemandTrendCardProps {\n  trendData: DemandTrendData | null\n  loading?: boolean\n}\n\nexport default function DemandTrendCard({ trendData, loading }: DemandTrendCardProps) {\n  const { theme } = useTheme()\n\n  if (loading || !trendData) {\n    return (\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Demand Trend</CardTitle>\n          <div className={`p-1.5 rounded-md ${\n            theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100'\n          }`}>\n            <TrendingUp className=\"h-4 w-4 text-blue-600\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n            <div className=\"h-4 bg-gray-200 rounded\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  const getTrendIcon = () => {\n    switch (trendData.trend_direction) {\n      case 'rising':\n        return TrendingUp\n      case 'falling':\n        return TrendingDown\n      default:\n        return Minus\n    }\n  }\n\n  const getTrendColor = () => {\n    switch (trendData.trend_direction) {\n      case 'rising':\n        return theme === 'dark' ? 'text-green-400' : 'text-green-600'\n      case 'falling':\n        return theme === 'dark' ? 'text-red-400' : 'text-red-600'\n      default:\n        return theme === 'dark' ? 'text-slate-400' : 'text-slate-600'\n    }\n  }\n\n  const getTrendBadgeColor = () => {\n    switch (trendData.trend_direction) {\n      case 'rising':\n        return 'bg-green-100 text-green-800 border-green-200'\n      case 'falling':\n        return 'bg-red-100 text-red-800 border-red-200'\n      default:\n        return 'bg-slate-100 text-slate-800 border-slate-200'\n    }\n  }\n\n  const formatHoursToPeak = (hours: number) => {\n    if (hours < 1) {\n      return `${Math.round(hours * 60)}m`\n    } else if (hours < 24) {\n      return `${Math.round(hours)}h`\n    } else {\n      const days = Math.floor(hours / 24)\n      const remainingHours = Math.round(hours % 24)\n      return `${days}d ${remainingHours}h`\n    }\n  }\n\n  const formatPeakTime = (isoString: string) => {\n    const date = new Date(isoString)\n    const now = new Date()\n    const isToday = date.toDateString() === now.toDateString()\n    const isTomorrow = date.toDateString() === new Date(now.getTime() + 24 * 60 * 60 * 1000).toDateString()\n    \n    const timeStr = date.toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    })\n    \n    if (isToday) return `Today ${timeStr}`\n    if (isTomorrow) return `Tomorrow ${timeStr}`\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    })\n  }\n\n  const TrendIcon = getTrendIcon()\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">Demand Trend</CardTitle>\n        <div className={`p-1.5 rounded-md ${\n          trendData.is_peak_hours \n            ? (theme === 'dark' ? 'bg-orange-900/50' : 'bg-orange-100')\n            : (theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100')\n        }`}>\n          <Zap className={`h-4 w-4 ${\n            trendData.is_peak_hours ? 'text-orange-600' : 'text-blue-600'\n          }`} />\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        {/* Current Trend */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <TrendIcon className={`h-4 w-4 ${getTrendColor()}`} />\n            <span className=\"text-sm font-medium capitalize\">\n              {trendData.trend_direction}\n            </span>\n          </div>\n          <Badge variant=\"outline\" className={`text-xs ${getTrendBadgeColor()} ${\n            theme === 'dark' ? 'bg-opacity-20' : ''\n          }`}>\n            {trendData.trend_percentage >= 0 ? '+' : ''}{trendData.trend_percentage.toFixed(1)}%\n          </Badge>\n        </div>\n\n        {/* Peak Prediction */}\n        <div className=\"border-t pt-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Clock className={`h-4 w-4 ${\n                theme === 'dark' ? 'text-slate-400' : 'text-slate-600'\n              }`} />\n              <span className=\"text-sm font-medium\">Next Peak</span>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-sm font-medium\">\n                {formatHoursToPeak(trendData.hours_to_peak)}\n              </div>\n              <div className={`text-xs ${\n                theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n              }`}>\n                {formatPeakTime(trendData.next_peak_time)}\n              </div>\n            </div>\n          </div>\n          \n          {/* Peak Load Estimate */}\n          <div className=\"mt-2 text-center\">\n            <div className={`text-xs ${\n              theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n            }`}>\n              Estimated peak: {(trendData.next_peak_load / 1000).toFixed(1)} GW\n            </div>\n          </div>\n        </div>\n\n        {/* Peak Hours Indicator */}\n        {trendData.is_peak_hours && (\n          <div className={`text-center py-1 px-2 rounded text-xs font-medium ${\n            theme === 'dark' \n              ? 'bg-orange-900/30 text-orange-300' \n              : 'bg-orange-100 text-orange-800'\n          }`}>\n            🔥 Peak Hours Active\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AALA;;;;;AAwBe,SAAS,gBAAgB,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAwB,GAA5C;;IACtC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,kJAAQ;IAE1B,IAAI,WAAW,CAAC,WAAW;QACzB,qBACE,6LAAC,2IAAI;;8BACH,6LAAC,iJAAU;oBAAC,WAAU;;sCACpB,6LAAC,gJAAS;4BAAC,WAAU;sCAAsB;;;;;;sCAC3C,6LAAC;4BAAI,WAAW,AAAC,oBAEhB,OADC,UAAU,SAAS,mBAAmB;sCAEtC,cAAA,6LAAC,mOAAU;gCAAC,WAAU;;;;;;;;;;;;;;;;;8BAG1B,6LAAC,kJAAW;8BACV,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,MAAM,eAAe;QACnB,OAAQ,UAAU,eAAe;YAC/B,KAAK;gBACH,OAAO,mOAAU;YACnB,KAAK;gBACH,OAAO,yOAAY;YACrB;gBACE,OAAO,gNAAK;QAChB;IACF;IAEA,MAAM,gBAAgB;QACpB,OAAQ,UAAU,eAAe;YAC/B,KAAK;gBACH,OAAO,UAAU,SAAS,mBAAmB;YAC/C,KAAK;gBACH,OAAO,UAAU,SAAS,iBAAiB;YAC7C;gBACE,OAAO,UAAU,SAAS,mBAAmB;QACjD;IACF;IAEA,MAAM,qBAAqB;QACzB,OAAQ,UAAU,eAAe;YAC/B,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,QAAQ,GAAG;YACb,OAAO,AAAC,GAAyB,OAAvB,KAAK,KAAK,CAAC,QAAQ,KAAI;QACnC,OAAO,IAAI,QAAQ,IAAI;YACrB,OAAO,AAAC,GAAoB,OAAlB,KAAK,KAAK,CAAC,QAAO;QAC9B,OAAO;YACL,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ;YAChC,MAAM,iBAAiB,KAAK,KAAK,CAAC,QAAQ;YAC1C,OAAO,AAAC,GAAW,OAAT,MAAK,MAAmB,OAAf,gBAAe;QACpC;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,MAAM,IAAI;QAChB,MAAM,UAAU,KAAK,YAAY,OAAO,IAAI,YAAY;QACxD,MAAM,aAAa,KAAK,YAAY,OAAO,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK,MAAM,YAAY;QAErG,MAAM,UAAU,KAAK,kBAAkB,CAAC,SAAS;YAC/C,MAAM;YACN,QAAQ;YACR,QAAQ;QACV;QAEA,IAAI,SAAS,OAAO,AAAC,SAAgB,OAAR;QAC7B,IAAI,YAAY,OAAO,AAAC,YAAmB,OAAR;QACnC,OAAO,KAAK,kBAAkB,CAAC,SAAS;YACtC,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;YACR,QAAQ;QACV;IACF;IAEA,MAAM,YAAY;IAElB,qBACE,6LAAC,2IAAI;;0BACH,6LAAC,iJAAU;gBAAC,WAAU;;kCACpB,6LAAC,gJAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,6LAAC;wBAAI,WAAW,AAAC,oBAIhB,OAHC,UAAU,aAAa,GAClB,UAAU,SAAS,qBAAqB,kBACxC,UAAU,SAAS,mBAAmB;kCAE3C,cAAA,6LAAC,0MAAG;4BAAC,WAAW,AAAC,WAEhB,OADC,UAAU,aAAa,GAAG,oBAAoB;;;;;;;;;;;;;;;;;0BAIpD,6LAAC,kJAAW;gBAAC,WAAU;;kCAErB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAU,WAAW,AAAC,WAA0B,OAAhB;;;;;;kDACjC,6LAAC;wCAAK,WAAU;kDACb,UAAU,eAAe;;;;;;;;;;;;0CAG9B,6LAAC,6IAAK;gCAAC,SAAQ;gCAAU,WAAW,AAAC,WACnC,OAD6C,sBAAqB,KAEnE,OADC,UAAU,SAAS,kBAAkB;;oCAEpC,UAAU,gBAAgB,IAAI,IAAI,MAAM;oCAAI,UAAU,gBAAgB,CAAC,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAKvF,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,gNAAK;gDAAC,WAAW,AAAC,WAElB,OADC,UAAU,SAAS,mBAAmB;;;;;;0DAExC,6LAAC;gDAAK,WAAU;0DAAsB;;;;;;;;;;;;kDAExC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ,kBAAkB,UAAU,aAAa;;;;;;0DAE5C,6LAAC;gDAAI,WAAW,AAAC,WAEhB,OADC,UAAU,SAAS,mBAAmB;0DAErC,eAAe,UAAU,cAAc;;;;;;;;;;;;;;;;;;0CAM9C,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAW,AAAC,WAEhB,OADC,UAAU,SAAS,mBAAmB;;wCACpC;wCACe,CAAC,UAAU,cAAc,GAAG,IAAI,EAAE,OAAO,CAAC;wCAAG;;;;;;;;;;;;;;;;;;oBAMnE,UAAU,aAAa,kBACtB,6LAAC;wBAAI,WAAW,AAAC,qDAIhB,OAHC,UAAU,SACN,qCACA;kCACF;;;;;;;;;;;;;;;;;;AAOd;GAzKwB;;QACJ,kJAAQ;;;KADJ","debugId":null}},
    {"offset": {"line": 2567, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 2631, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,8KAAqB;AAErC,MAAM,iBAAiB,iLAAwB;AAE/C,MAAM,+BAAiB,2KAAgB,MAGrC,QAA4D;QAA3D,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO;yBAC1D,6LAAC,gLAAuB;kBACtB,cAAA,6LAAC,iLAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,IAAA,4HAAE,EACX,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,iLAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2683, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ModelSelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport {\n  Brain,\n  Zap,\n  Layers,\n  CheckCircle,\n  TrendingUp,\n  ChevronDown\n} from 'lucide-react'\nimport { useTheme } from './ThemeProvider'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\n\ninterface ModelInfo {\n  model_id: string\n  name: string\n  type: string\n  description: string\n  version: string\n  accuracy: number\n  training_date: string\n  is_active: boolean\n}\n\ninterface ModelSelectorProps {\n  onModelChange: (modelId: string) => void\n  className?: string\n}\n\nconst API_BASE = process.env.NEXT_PUBLIC_API_BASE || 'http://localhost:8001'\n\nexport default function ModelSelector({ onModelChange, className = '' }: ModelSelectorProps) {\n  const { theme } = useTheme()\n  const [models, setModels] = useState<ModelInfo[]>([])\n  const [currentModel, setCurrentModel] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() => {\n    fetchModels()\n    fetchCurrentModel()\n  }, [])\n\n  const fetchModels = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/models`)\n      if (response.ok) {\n        const data = await response.json()\n        setModels(data)\n      }\n    } catch (err) {\n      console.error('Failed to fetch models:', err)\n    }\n  }\n\n  const fetchCurrentModel = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/models/current`)\n      if (response.ok) {\n        const data = await response.json()\n        setCurrentModel(data.current_model)\n      }\n    } catch (err) {\n      console.error('Failed to fetch current model:', err)\n    }\n  }\n\n  const selectModel = async (modelId: string) => {\n    if (modelId === currentModel) return\n\n    setLoading(true)\n    try {\n      const response = await fetch(`${API_BASE}/models/select/${modelId}`, {\n        method: 'POST'\n      })\n      \n      if (response.ok) {\n        setCurrentModel(modelId)\n        onModelChange(modelId)\n        setIsOpen(false)\n      }\n    } catch (err) {\n      console.error('Failed to select model:', err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const getModelIcon = (type: string) => {\n    switch (type) {\n      case 'xgboost':\n        return TrendingUp\n      case 'lightgbm':\n        return Zap\n      case 'lstm':\n        return Brain\n      case 'ensemble':\n        return Layers\n      default:\n        return Zap\n    }\n  }\n\n  const getModelColor = (type: string) => {\n    switch (type) {\n      case 'xgboost':\n        return theme === 'dark' ? 'text-green-400' : 'text-green-600'\n      case 'lightgbm':\n        return theme === 'dark' ? 'text-yellow-400' : 'text-yellow-600'\n      case 'lstm':\n        return theme === 'dark' ? 'text-blue-400' : 'text-blue-600'\n      case 'ensemble':\n        return theme === 'dark' ? 'text-purple-400' : 'text-purple-600'\n      default:\n        return theme === 'dark' ? 'text-slate-400' : 'text-slate-600'\n    }\n  }\n\n  const getModelBadgeColor = (type: string) => {\n    switch (type) {\n      case 'xgboost':\n        return 'bg-green-100 text-green-800 border-green-200'\n      case 'lightgbm':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'lstm':\n        return 'bg-blue-100 text-blue-800 border-blue-200'\n      case 'ensemble':\n        return 'bg-purple-100 text-purple-800 border-purple-200'\n      default:\n        return 'bg-slate-100 text-slate-800 border-slate-200'\n    }\n  }\n\n\n\n  const currentModelInfo = models.find(m => m.model_id === currentModel)\n\n  return (\n    <div className={`flex items-center ${className}`}>\n      <Popover open={isOpen} onOpenChange={setIsOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"gap-1.5 h-[32px] min-w-[140px] justify-between text-xs px-2\"\n            disabled={loading}\n          >\n            {currentModelInfo ? (\n              <>\n                {(() => {\n                  const Icon = getModelIcon(currentModelInfo.type)\n                  return <Icon className={`h-3 w-3 ${getModelColor(currentModelInfo.type)}`} />\n                })()}\n                <span className=\"flex-1 text-left\">{currentModelInfo.name}</span>\n              </>\n            ) : (\n              <>\n                <Zap className=\"h-3 w-3\" />\n                <span className=\"flex-1 text-left\">Select Model</span>\n              </>\n            )}\n            <ChevronDown className=\"h-3 w-3\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-80 p-0\" align=\"start\">\n          <div className={`p-3 border-b ${\n            theme === 'dark' ? 'border-slate-700' : 'border-slate-200'\n          }`}>\n            <h3 className=\"font-semibold text-xs\">Select ML Model</h3>\n            <p className={`text-xs mt-1 ${\n              theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n            }`}>\n              Choose the model for power demand predictions\n            </p>\n          </div>\n          \n          <div className=\"max-h-80 overflow-y-auto\">\n            {models.map((model) => {\n              const Icon = getModelIcon(model.type)\n              const isSelected = model.model_id === currentModel\n              \n              return (\n                <div\n                  key={model.model_id}\n                  className={`p-4 border-b cursor-pointer transition-colors ${\n                    theme === 'dark' ? 'border-slate-700 hover:bg-slate-800' : 'border-slate-200 hover:bg-slate-50'\n                  } ${isSelected ? (theme === 'dark' ? 'bg-slate-800' : 'bg-slate-50') : ''}`}\n                  onClick={() => selectModel(model.model_id)}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-start gap-3 flex-1\">\n                      <div className={`p-2 rounded-md ${\n                        theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100'\n                      }`}>\n                        <Icon className={`h-4 w-4 ${getModelColor(model.type)}`} />\n                      </div>\n                      \n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h4 className=\"font-medium text-sm\">{model.name}</h4>\n                          {isSelected && (\n                            <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                          )}\n                        </div>\n                        \n                        <p className={`text-xs mb-2 ${\n                          theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n                        }`}>\n                          {model.description}\n                        </p>\n                        \n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <Badge variant=\"outline\" className={`text-xs ${getModelBadgeColor(model.type)} ${\n                            theme === 'dark' ? 'bg-opacity-20' : ''\n                          }`}>\n                            {model.type.toUpperCase()}\n                          </Badge>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            v{model.version}\n                          </Badge>\n                        </div>\n                        \n                        <div className=\"flex items-center text-xs\">\n                          <div className=\"flex items-center gap-1\">\n                            <TrendingUp className=\"h-3 w-3\" />\n                            <span>{model.accuracy.toFixed(1)}% accuracy</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3094, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/RegionalSelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\nimport { \n  MapPin, \n  ChevronDown, \n  Zap, \n  Users, \n  Thermometer,\n  Building2,\n  Globe,\n  CheckCircle\n} from 'lucide-react'\nimport { useRegional } from './RegionalProvider'\nimport { useTheme } from './ThemeProvider'\n\nexport default function RegionalSelector() {\n  const [isOpen, setIsOpen] = useState(false)\n  const { selectedZone, setSelectedZone, currentZone, allZones, zoneCategories, isStatewide } = useRegional()\n  const { theme } = useTheme()\n\n  const handleZoneSelect = (zoneName: string) => {\n    setSelectedZone(zoneName)\n    setIsOpen(false)\n  }\n\n  const getZoneIcon = (zoneName: string) => {\n    if (zoneName === 'STATEWIDE') return Globe\n    if (zoneName.includes('PGE') || zoneName === 'SMUD') return Building2\n    return MapPin\n  }\n\n  const getLoadSizeLabel = (weight: number) => {\n    if (weight >= 0.3) return 'Major'\n    if (weight >= 0.1) return 'Large'\n    if (weight >= 0.05) return 'Medium'\n    return 'Small'\n  }\n\n  const getLoadSizeColor = (weight: number) => {\n    if (weight >= 0.3) return 'bg-red-100 text-red-800 border-red-200'\n    if (weight >= 0.1) return 'bg-orange-100 text-orange-800 border-orange-200'\n    if (weight >= 0.05) return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n    return 'bg-green-100 text-green-800 border-green-200'\n  }\n\n  return (\n    <div className=\"flex items-center\">\n      {/* Regional Selector Button showing current zone */}\n      <Popover open={isOpen} onOpenChange={setIsOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"gap-1.5 h-[32px] text-xs px-2\"\n          >\n            {isStatewide ? (\n              <Globe className=\"h-3 w-3 text-blue-600\" />\n            ) : (\n              <MapPin className=\"h-3 w-3 text-green-600\" />\n            )}\n            {isStatewide ? 'Statewide' : `${currentZone.major_city} (${currentZone.name})`}\n            <ChevronDown className=\"h-3 w-3\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-80 p-0\" align=\"end\">\n          <Card className=\"border-0 shadow-lg\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm flex items-center gap-2\">\n                <MapPin className=\"h-4 w-4 text-blue-600\" />\n                Select California Region\n              </CardTitle>\n              <CardDescription className=\"text-xs\">\n                Choose a CAISO zone or view statewide aggregated data\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4 max-h-96 overflow-y-auto\">\n              {Object.entries(zoneCategories).map(([category, zones]) => (\n                <div key={category}>\n                  <h4 className={`text-sm font-semibold mb-2 ${\n                    theme === 'dark' ? 'text-slate-300' : 'text-slate-700'\n                  }`}>\n                    {category}\n                  </h4>\n                  <div className=\"space-y-1\">\n                    {zones.map((zoneName) => {\n                      const zone = allZones[zoneName]\n                      const ZoneIcon = getZoneIcon(zoneName)\n                      const isSelected = selectedZone === zoneName\n                      \n                      return (\n                        <button\n                          key={zoneName}\n                          onClick={() => handleZoneSelect(zoneName)}\n                          className={`w-full p-3 rounded-lg border text-left transition-all hover:shadow-sm ${\n                            isSelected\n                              ? (theme === 'dark' \n                                  ? 'bg-blue-900/30 border-blue-600 text-blue-300' \n                                  : 'bg-blue-50 border-blue-200 text-blue-900')\n                              : (theme === 'dark'\n                                  ? 'bg-slate-800 border-slate-700 hover:bg-slate-700 text-white'\n                                  : 'bg-white border-slate-200 hover:bg-slate-50 text-slate-900')\n                          }`}\n                        >\n                          <div className=\"flex items-start justify-between\">\n                            <div className=\"flex items-start gap-3 flex-1\">\n                              <div className={`p-1.5 rounded-md mt-0.5 ${\n                                isSelected\n                                  ? (theme === 'dark' ? 'bg-blue-800/50' : 'bg-blue-100')\n                                  : (theme === 'dark' ? 'bg-slate-700' : 'bg-slate-100')\n                              }`}>\n                                <ZoneIcon className={`h-4 w-4 ${\n                                  isSelected ? 'text-blue-600' : (theme === 'dark' ? 'text-slate-400' : 'text-slate-600')\n                                }`} />\n                              </div>\n                              <div className=\"flex-1 min-w-0\">\n                                <div className=\"flex items-center gap-2 mb-1\">\n                                  <span className=\"font-medium text-sm\">{zone.full_name}</span>\n                                  {isSelected && (\n                                    <CheckCircle className=\"h-4 w-4 text-blue-600 flex-shrink-0\" />\n                                  )}\n                                </div>\n                                <p className={`text-xs mb-2 ${\n                                  theme === 'dark' ? 'text-slate-400' : 'text-slate-600'\n                                }`}>\n                                  {zone.description}\n                                </p>\n                                <div className=\"flex items-center gap-2 flex-wrap\">\n                                  {zoneName !== 'STATEWIDE' && (\n                                    <Badge \n                                      variant=\"secondary\" \n                                      className={`text-xs ${getLoadSizeColor(zone.load_weight)} ${\n                                        theme === 'dark' ? 'bg-opacity-20' : ''\n                                      }`}\n                                    >\n                                      <Zap className=\"h-3 w-3 mr-1\" />\n                                      {getLoadSizeLabel(zone.load_weight)} Load\n                                    </Badge>\n                                  )}\n                                  <Badge \n                                    variant=\"outline\" \n                                    className={`text-xs ${\n                                      theme === 'dark' ? 'border-slate-600 text-slate-300' : 'border-slate-300 text-slate-600'\n                                    }`}\n                                  >\n                                    <Thermometer className=\"h-3 w-3 mr-1\" />\n                                    {zone.climate_region}\n                                  </Badge>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </button>\n                      )\n                    })}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          </Card>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3437, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/components/ui/toggle.tsx"],"sourcesContent":["'use client'\n\nimport { useTheme } from '@/components/ThemeProvider'\n\ninterface ToggleProps {\n  leftLabel: string\n  rightLabel: string\n  isRight: boolean\n  onToggle: () => void\n  className?: string\n}\n\nexport default function Toggle({\n  leftLabel,\n  rightLabel,\n  isRight,\n  onToggle,\n  className = ''\n}: ToggleProps) {\n  const { theme } = useTheme()\n\n  return (\n    <div className={`flex items-center gap-1.5 text-xs py-1 ${className}`}>\n      {/* Left Label */}\n      <span className={`font-normal text-xs ${\n        !isRight\n          ? (theme === 'dark' ? 'text-white' : 'text-slate-900')\n          : (theme === 'dark' ? 'text-slate-400' : 'text-slate-500')\n      }`}>\n        {leftLabel}\n      </span>\n\n      {/* Toggle Switch */}\n      <button\n        onClick={onToggle}\n        className={`relative inline-flex h-4 w-7 items-center rounded-full transition-colors focus:outline-none focus:ring-1 focus:ring-blue-500 focus:ring-offset-1 ${\n          isRight\n            ? 'bg-blue-600'\n            : (theme === 'dark' ? 'bg-slate-600' : 'bg-slate-400')\n        }`}\n      >\n        {/* Sliding Circle */}\n        <span\n          className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\n            isRight ? 'translate-x-3.5' : 'translate-x-0.5'\n          }`}\n        />\n      </button>\n\n      {/* Right Label */}\n      <span className={`font-normal text-xs ${\n        isRight\n          ? (theme === 'dark' ? 'text-white' : 'text-slate-900')\n          : (theme === 'dark' ? 'text-slate-400' : 'text-slate-500')\n      }`}>\n        {rightLabel}\n      </span>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAYe,SAAS,OAAO,KAMjB;QANiB,EAC7B,SAAS,EACT,UAAU,EACV,OAAO,EACP,QAAQ,EACR,YAAY,EAAE,EACF,GANiB;;IAO7B,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,kJAAQ;IAE1B,qBACE,6LAAC;QAAI,WAAW,AAAC,0CAAmD,OAAV;;0BAExD,6LAAC;gBAAK,WAAW,AAAC,uBAIjB,OAHC,CAAC,UACI,UAAU,SAAS,eAAe,mBAClC,UAAU,SAAS,mBAAmB;0BAE1C;;;;;;0BAIH,6LAAC;gBACC,SAAS;gBACT,WAAW,AAAC,oJAIX,OAHC,UACI,gBACC,UAAU,SAAS,iBAAiB;0BAI3C,cAAA,6LAAC;oBACC,WAAW,AAAC,6EAEX,OADC,UAAU,oBAAoB;;;;;;;;;;;0BAMpC,6LAAC;gBAAK,WAAW,AAAC,uBAIjB,OAHC,UACK,UAAU,SAAS,eAAe,mBAClC,UAAU,SAAS,mBAAmB;0BAE1C;;;;;;;;;;;;AAIT;GA/CwB;;QAOJ,kJAAQ;;;KAPJ","debugId":null}},
    {"offset": {"line": 3507, "column": 0}, "map": {"version":3,"sources":["file:///Users/bran/Work/model-power-nowcast/dashboard/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport {\n  Zap,\n  TrendingUp,\n  Thermometer,\n  Wind,\n  Droplets,\n  AlertTriangle,\n  CheckCircle,\n  RefreshCw,\n  Activity,\n  BarChart3,\n  Clock,\n  Database,\n  Settings,\n  Wifi,\n  WifiOff,\n  Sun,\n  Moon,\n  Gauge\n} from 'lucide-react'\nimport PredictionChart from '@/components/PredictionChart'\nimport HistoricalChart from '@/components/HistoricalChart'\nimport MetricsGrid from '@/components/MetricsGrid'\nimport DemandTrendCard from '@/components/DemandTrendCard'\nimport ModelSelector from '@/components/ModelSelector'\nimport { useTheme } from '@/components/ThemeProvider'\nimport { useUnits } from '@/components/UnitsProvider'\nimport { useRegional } from '@/components/RegionalProvider'\nimport RegionalSelector from '@/components/RegionalSelector'\nimport Toggle from '@/components/ui/toggle'\n\ninterface PredictionPoint {\n  timestamp: string\n  predicted_load: number\n  confidence_lower: number\n  confidence_upper: number\n  hour_ahead: number\n}\n\ninterface SystemStatus {\n  status: string\n  last_prediction: string\n  model_accuracy: number\n  data_freshness: string\n  alerts: string[]\n}\n\ninterface ModelMetrics {\n  mae: number\n  rmse: number\n  r2: number\n  mape: number\n  last_updated: string\n}\n\nexport default function Dashboard() {\n  const [predictions, setPredictions] = useState<PredictionPoint[]>([])\n  const [systemStatus, setSystemStatus] = useState<SystemStatus | null>(null)\n  const [modelMetrics, setModelMetrics] = useState<any>(null)\n  const [currentWeather, setCurrentWeather] = useState<any>(null)\n  const [demandTrend, setDemandTrend] = useState<any>(null)\n  const [selectedModel, setSelectedModel] = useState<string>('xgboost')\n  const [currentModelInfo, setCurrentModelInfo] = useState<any>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  // Use context providers\n  const { theme, toggleTheme } = useTheme()\n  const { unitSystem, toggleUnits, formatTemperature, formatWindSpeed } = useUnits()\n  const { selectedZone, currentZone, isStatewide } = useRegional()\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null)\n\n  // Configuration for API endpoint\n  const API_BASE = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8001'\n\n  const fetchPredictions = async () => {\n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Use real current weather conditions for the selected zone\n      const weatherData = {\n        temperature: currentWeather?.temperature || 28.5,\n        humidity: currentWeather?.humidity || 65,\n        wind_speed: currentWeather?.wind_speed || 3.2,\n        zone: selectedZone,\n        region_info: {\n          name: currentZone.name,\n          full_name: currentZone.full_name,\n          major_city: currentZone.major_city,\n          climate_region: currentZone.climate_region,\n          load_weight: currentZone.load_weight\n        }\n      }\n\n      const response = await fetch(`${API_BASE}/predict?model_id=${selectedModel}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(weatherData)\n      })\n\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status}`)\n      }\n\n      const data = await response.json()\n      setPredictions(data)\n      setLastUpdate(new Date())\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch predictions')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchSystemStatus = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/status?zone=${selectedZone}&model_id=${selectedModel}`)\n      if (response.ok) {\n        const data = await response.json()\n        setSystemStatus(data)\n      }\n    } catch (err) {\n      console.error('Failed to fetch system status:', err)\n    }\n  }\n\n  const fetchModelMetrics = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/metrics?zone=${selectedZone}&model_id=${selectedModel}`)\n      if (response.ok) {\n        const data = await response.json()\n        setModelMetrics(data)\n      }\n    } catch (err) {\n      console.error('Failed to fetch model metrics:', err)\n    }\n  }\n\n\n\n  const fetchCurrentWeather = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/weather/${selectedZone}`)\n      if (response.ok) {\n        const data = await response.json()\n        setCurrentWeather(data)\n      } else if (response.status === 503) {\n        // Weather data unavailable\n        setCurrentWeather(null)\n        console.warn('Weather data unavailable')\n      } else {\n        setCurrentWeather(null)\n        console.error('Failed to fetch weather:', response.status)\n      }\n    } catch (err) {\n      setCurrentWeather(null)\n      console.error('Failed to fetch current weather:', err)\n    }\n  }\n\n  const fetchDemandTrend = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/trend/${selectedZone}`)\n      if (response.ok) {\n        const data = await response.json()\n        setDemandTrend(data)\n      }\n    } catch (err) {\n      console.error('Failed to fetch demand trend:', err)\n    }\n  }\n\n  const fetchCurrentModelInfo = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/models/current`)\n      if (response.ok) {\n        const data = await response.json()\n        setCurrentModelInfo(data.model_info)\n      }\n    } catch (err) {\n      console.error('Failed to fetch current model info:', err)\n    }\n  }\n\n  const handleModelChange = (modelId: string) => {\n    setSelectedModel(modelId)\n    // Immediately fetch new data with the selected model\n    fetchPredictions()\n    fetchModelMetrics()\n    fetchSystemStatus()\n    fetchCurrentModelInfo()\n  }\n\n  useEffect(() => {\n    // Initial data fetch\n    fetchPredictions()\n    fetchSystemStatus()\n    fetchModelMetrics()\n    fetchCurrentWeather()\n    fetchDemandTrend()\n    fetchCurrentModelInfo()\n\n    // Set up auto-refresh every 5 minutes\n    const interval = setInterval(() => {\n      fetchPredictions()\n      fetchSystemStatus()\n      fetchCurrentWeather()\n      fetchDemandTrend()\n    }, 5 * 60 * 1000)\n\n    return () => clearInterval(interval)\n  }, [selectedZone, selectedModel]) // Re-fetch when region or model changes\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'operational': return 'bg-green-500'\n      case 'warning': return 'bg-yellow-500'\n      case 'error': return 'bg-red-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  // Use actual current load from demand trend data, not predictions\n  const currentLoad = demandTrend?.current_load || 0\n  const nextHourPrediction = predictions.length > 0 ? predictions[0].predicted_load : 0\n  const peakLoad = predictions.length > 0 ? Math.max(...predictions.map(p => p.predicted_load)) : 0\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 p-4 ${\n      theme === 'dark'\n        ? 'bg-gradient-to-br from-slate-900 to-slate-800 text-white'\n        : 'bg-gradient-to-br from-slate-50 to-slate-100 text-slate-900'\n    }`}>\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"space-y-4\">\n          {/* Title and Main Controls */}\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <h1 className={`text-4xl font-bold flex items-center gap-3 ${\n                theme === 'dark' ? 'text-white' : 'text-slate-900'\n              }`}>\n                <div className={`p-2 rounded-lg ${\n                  theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100'\n                }`}>\n                  <Activity className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                The Grid Ahead\n              </h1>\n              <div className=\"flex items-center justify-between mt-2\">\n                <p className={`text-base ${\n                  theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n                }`}>\n                  Predicting power demand on the California Independent System Operator (CAISO) with ML\n                </p>\n\n                {/* Settings Controls - Right aligned with subtitle */}\n                <div className=\"flex items-center gap-3 ml-6\">\n                  {/* Unit Toggle */}\n                  <Toggle\n                    leftLabel=\"Metric\"\n                    rightLabel=\"Imperial\"\n                    isRight={unitSystem === 'imperial'}\n                    onToggle={toggleUnits}\n                  />\n\n                  {/* Theme Toggle */}\n                  <Toggle\n                    leftLabel=\"Light\"\n                    rightLabel=\"Dark\"\n                    isRight={theme === 'dark'}\n                    onToggle={toggleTheme}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Main Controls Section */}\n          <div className=\"flex items-center gap-3 flex-wrap pt-4\">\n            {/* Regional Selector */}\n            <RegionalSelector />\n\n            {/* Model Selector */}\n            <ModelSelector\n              onModelChange={handleModelChange}\n            />\n          </div>\n        </div>\n\n        {/* Alerts */}\n        {error && (\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>\n        )}\n\n        {systemStatus?.alerts && systemStatus.alerts.length > 0 && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>\n              {systemStatus.alerts.join(', ')}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {/* Key Metrics Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Current Demand</CardTitle>\n              <div className={`p-1.5 rounded-md ${\n                theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100'\n              }`}>\n                <Zap className=\"h-4 w-4 text-blue-600\" />\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              <div className=\"text-2xl font-bold\">{currentLoad.toFixed(0)} MW</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Real-time system load\n              </p>\n              <div className=\"border-t pt-2\">\n                <div className=\"text-sm font-medium\">\n                  {((currentLoad / 1000)).toFixed(1)} GW\n                </div>\n                <div className={`text-xs ${\n                  theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n                }`}>\n                  Gigawatt equivalent\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Next Hour Prediction</CardTitle>\n              <div className={`p-1.5 rounded-md ${\n                theme === 'dark' ? 'bg-purple-900/50' : 'bg-purple-100'\n              }`}>\n                <TrendingUp className=\"h-4 w-4 text-purple-600\" />\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              <div className=\"text-2xl font-bold\">{nextHourPrediction.toFixed(0)} MW</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Forecast for next hour\n              </p>\n              <div className=\"border-t pt-2\">\n                <div className=\"text-sm font-medium\">\n                  {nextHourPrediction > currentLoad ? '+' : ''}{((nextHourPrediction - currentLoad) / currentLoad * 100).toFixed(1)}%\n                </div>\n                <div className={`text-xs ${\n                  theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n                }`}>\n                  {nextHourPrediction > currentLoad ? 'Increase expected' : 'Decrease expected'}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Model Accuracy</CardTitle>\n              <div className={`p-1.5 rounded-md ${\n                theme === 'dark' ? 'bg-purple-900/50' : 'bg-purple-100'\n              }`}>\n                <BarChart3 className=\"h-4 w-4 text-purple-600\" />\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              <div className=\"text-2xl font-bold\">\n                {modelMetrics ? `${modelMetrics.mape.toFixed(1)}%` : 'N/A'}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Mean absolute error\n              </p>\n              <div className=\"border-t pt-2\">\n                <div className=\"text-sm font-medium\">\n                  {modelMetrics ? `${(modelMetrics.r2 * 100).toFixed(1)}%` : 'N/A'}\n                </div>\n                <div className={`text-xs ${\n                  theme === 'dark' ? 'text-slate-400' : 'text-slate-500'\n                }`}>\n                  R² variance explained\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <DemandTrendCard\n            trendData={demandTrend}\n            loading={loading}\n          />\n        </div>\n\n        {/* Main Dashboard */}\n        <Tabs defaultValue=\"predictions\" className=\"space-y-4\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"predictions\" className=\"flex items-center gap-2\">\n              <Activity className=\"h-4 w-4\" />\n              Live Predictions\n            </TabsTrigger>\n            <TabsTrigger value=\"historical\" className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-4 w-4\" />\n              Historical Data\n            </TabsTrigger>\n            <TabsTrigger value=\"metrics\" className=\"flex items-center gap-2\">\n              <Settings className=\"h-4 w-4\" />\n              Model Performance\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"predictions\" className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Main Prediction Chart */}\n              <div className=\"lg:col-span-2\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <div className={`p-1.5 rounded-md ${\n                        theme === 'dark' ? 'bg-blue-900/50' : 'bg-blue-100'\n                      }`}>\n                        <TrendingUp className=\"h-4 w-4 text-blue-600\" />\n                      </div>\n                      6-Hour Demand Forecast\n                    </CardTitle>\n                    <CardDescription>\n                      Predicted power demand with confidence intervals\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <PredictionChart predictions={predictions} />\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Prediction Details */}\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <div className={`p-1.5 rounded-md ${\n                        theme === 'dark' ? 'bg-slate-700/50' : 'bg-slate-100'\n                      }`}>\n                        <Settings className=\"h-4 w-4 text-slate-600\" />\n                      </div>\n                      Current Conditions\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className={`flex items-center justify-between p-3 rounded-lg border ${\n                      theme === 'dark'\n                        ? 'bg-orange-900/20 border-orange-800/30'\n                        : 'bg-orange-50 border-orange-200'\n                    }`}>\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`p-1.5 rounded-md ${\n                          theme === 'dark' ? 'bg-orange-900/40' : 'bg-orange-100'\n                        }`}>\n                          <Thermometer className=\"h-4 w-4 text-orange-600\" />\n                        </div>\n                        <span className=\"text-sm font-medium\">Temperature</span>\n                      </div>\n                      <Badge variant=\"secondary\" className={`${\n                        theme === 'dark'\n                          ? 'bg-orange-900/40 text-orange-300 border-orange-800'\n                          : 'bg-orange-100 text-orange-800'\n                      }`}>\n                        {currentWeather ? formatTemperature(currentWeather.temperature) : 'Unavailable'}\n                      </Badge>\n                    </div>\n\n                    <div className={`flex items-center justify-between p-3 rounded-lg border ${\n                      theme === 'dark'\n                        ? 'bg-blue-900/20 border-blue-800/30'\n                        : 'bg-blue-50 border-blue-200'\n                    }`}>\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`p-1.5 rounded-md ${\n                          theme === 'dark' ? 'bg-blue-900/40' : 'bg-blue-100'\n                        }`}>\n                          <Droplets className=\"h-4 w-4 text-blue-600\" />\n                        </div>\n                        <span className=\"text-sm font-medium\">Humidity</span>\n                      </div>\n                      <Badge variant=\"secondary\" className={`${\n                        theme === 'dark'\n                          ? 'bg-blue-900/40 text-blue-300 border-blue-800'\n                          : 'bg-blue-100 text-blue-800'\n                      }`}>\n                        {currentWeather ? `${currentWeather.humidity.toFixed(0)}%` : 'Unavailable'}\n                      </Badge>\n                    </div>\n\n                    <div className={`flex items-center justify-between p-3 rounded-lg border ${\n                      theme === 'dark'\n                        ? 'bg-green-900/20 border-green-800/30'\n                        : 'bg-green-50 border-green-200'\n                    }`}>\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`p-1.5 rounded-md ${\n                          theme === 'dark' ? 'bg-green-900/40' : 'bg-green-100'\n                        }`}>\n                          <Wind className=\"h-4 w-4 text-green-600\" />\n                        </div>\n                        <span className=\"text-sm font-medium\">Wind Speed</span>\n                      </div>\n                      <Badge variant=\"secondary\" className={`${\n                        theme === 'dark'\n                          ? 'bg-green-900/40 text-green-300 border-green-800'\n                          : 'bg-green-100 text-green-800'\n                      }`}>\n                        {currentWeather ? formatWindSpeed(currentWeather.wind_speed) : 'Unavailable'}\n                      </Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Hourly Breakdown</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      {predictions.slice(0, 6).map((pred, index) => (\n                        <div key={index} className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-muted-foreground\">\n                            +{pred.hour_ahead}h ({formatTime(pred.timestamp)})\n                          </span>\n                          <span className=\"font-medium\">\n                            {pred.predicted_load.toFixed(0)} MW\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"historical\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Historical Performance</CardTitle>\n                <CardDescription>\n                  Actual vs predicted demand over the past week\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <HistoricalChart apiBase={API_BASE} selectedZone={selectedZone} selectedModel={selectedModel} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"metrics\">\n            <MetricsGrid metrics={modelMetrics} modelInfo={currentModelInfo} />\n          </TabsContent>\n        </Tabs>\n\n        {/* Footer */}\n        <div className=\"text-center text-sm text-muted-foreground\">\n          {lastUpdate && (\n            <p>Last updated: {lastUpdate.toLocaleString()}</p>\n          )}\n          <p className=\"mt-1\">\n            © 2025 Brandon Huey\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}